{
  "doubleNeg": {
    "AutoGenerated": [
      "(1, 2) Found '-' while expecting one of the following tokens: int, ident, '('."
    ]
  },
  "letWithoutIn2": {
    "AutoGenerated": [
      "(2, 1) Found let while expecting one of the following tokens: int, ident, '(', ')', then, else, '=', in, '-', '+', '*', '/', '<', '>', (EOF)."
    ]
  },
  "letWithoutIn": {
    "AutoGenerated": [
      "(1, 10) Found (EOF) while expecting one of the following tokens: '=', in, '-', '+', '*', '/', '<', '>'."
    ]
  },
  "digitsInIdents": {
    "AutoGenerated": [
      "Bind (false, \"x2\", Lit (Int 42), Var \"x2\")"
    ]
  },
  "simpleAbs": {
    "AutoGenerated": [
      "Abs (\"n\", Var \"n\")"
    ]
  },
  "subComplex": {
    "AutoGenerated": [
      "Builtin",
      "  (UnaryArithmetic (Neg, Builtin (Arithmetic (Sub, Lit (Int 42), Lit (Int 17)))))"
    ]
  },
  "num": {
    "AutoGenerated": [
      "Lit (Int 1)"
    ]
  },
  "opSub": {
    "AutoGenerated": [
      "Builtin (Arithmetic (Sub, Lit (Int 1), Lit (Int 5)))"
    ]
  },
  "opAdd": {
    "AutoGenerated": [
      "Builtin (Arithmetic (Add, Lit (Int 1), Lit (Int 2)))"
    ]
  },
  "multiArgAbs": {
    "AutoGenerated": [
      "Abs",
      "  (\"a\",",
      "   Abs",
      "     (\"b\",",
      "      Abs",
      "        (\"c\",",
      "         Builtin",
      "           (Arithmetic",
      "              (Sub, Builtin (Arithmetic (Mul, Var \"b\", Var \"b\")),",
      "               Builtin",
      "                 (Arithmetic",
      "                    (Mul, Builtin (Arithmetic (Mul, Lit (Int 4), Var \"a\")),",
      "                     Var \"c\")))))))"
    ]
  },
  "fib": {
    "AutoGenerated": [
      "Bind",
      "  (true, \"fib\",",
      "   Abs",
      "     (\"n\",",
      "      Cond",
      "        (Builtin (Comparison (Less, Var \"n\", Lit (Int 2))), Lit (Int 1),",
      "         Builtin",
      "           (Arithmetic",
      "              (Add,",
      "               App (Var \"fib\", Builtin (Arithmetic (Sub, Var \"n\", Lit (Int 1)))),",
      "               App (Var \"fib\", Builtin (Arithmetic (Sub, Var \"n\", Lit (Int 2)))))))),",
      "   App (Var \"fib\", Lit (Int 10)))"
    ]
  },
  "plusMulMixed": {
    "AutoGenerated": [
      "Builtin",
      "  (Arithmetic",
      "     (Add, Lit (Int 2), Builtin (Arithmetic (Mul, Lit (Int 3), Lit (Int 4)))))"
    ]
  },
  "negNum": {
    "AutoGenerated": [
      "Lit (Int -1)"
    ]
  },
  "letInArithmetic": {
    "AutoGenerated": [
      "Bind",
      "  (false, \"inc\", Abs (\"x\", Builtin (Arithmetic (Add, Var \"x\", Lit (Int 1)))),",
      "   App (Var \"inc\", Lit (Int 3)))"
    ]
  },
  "absAndLet": {
    "AutoGenerated": [
      "Bind",
      "  (false, \"f\", Abs (\"x\", Builtin (Arithmetic (Add, Var \"x\", Lit (Int 2)))),",
      "   App (Var \"f\", Lit (Int 2)))"
    ]
  }
}